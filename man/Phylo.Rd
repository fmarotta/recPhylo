% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PhyloParse.R
\name{Phylo}
\alias{Phylo}
\title{R6 Class Phylo}
\value{
A new Phylo object.
}
\description{
Class used to import and manipulate phylogenetic trees in \href{https://en.wikipedia.org/wiki/PhyloXML}{PhyloXML format}.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{spList}}{Species tree in list form.}

\item{\code{spNodes}}{data.frame with the nodes of the species tree.}

\item{\code{spEdges}}{data.frame with the edges of the species tree.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Phylo-new}{\code{Phylo$new()}}
\item \href{#method-Phylo-redraw}{\code{Phylo$redraw()}}
\item \href{#method-Phylo-import_branch_lengths}{\code{Phylo$import_branch_lengths()}}
\item \href{#method-Phylo-add_species_nodes_annotation}{\code{Phylo$add_species_nodes_annotation()}}
\item \href{#method-Phylo-add_species_edges_annotation}{\code{Phylo$add_species_edges_annotation()}}
\item \href{#method-Phylo-flip_species_children}{\code{Phylo$flip_species_children()}}
\item \href{#method-Phylo-print}{\code{Phylo$print()}}
\item \href{#method-Phylo-summarize}{\code{Phylo$summarize()}}
\item \href{#method-Phylo-write}{\code{Phylo$write()}}
\item \href{#method-Phylo-plot}{\code{Phylo$plot()}}
\item \href{#method-Phylo-clone}{\code{Phylo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-new"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-new}{}}}
\subsection{Method \code{new()}}{
Create a new Phylo object from a PhyloXML file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$new(
  xml_file,
  use_branch_length = "branch_length",
  x_padding = 1,
  branch_length_scale = 1,
  use_y_shift = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{xml_file}}{Path to the PhyloXML file.}

\item{\code{use_branch_length}}{What to use as branch length}

\item{\code{x_padding}}{Distance between species in the plot}

\item{\code{branch_length_scale}}{Multiplier for the branch length}

\item{\code{use_y_shift}}{Whether to use the y_shift correction}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-redraw"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-redraw}{}}}
\subsection{Method \code{redraw()}}{
Redraw the reconciliated tree, changing parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$redraw(x_padding, use_branch_length, branch_length_scale, use_y_shift)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x_padding}}{Distance between species in the plot}

\item{\code{use_branch_length}}{What to use as branch length}

\item{\code{branch_length_scale}}{Multiplier for the branch length}

\item{\code{use_y_shift}}{Whether to use the y_shift correction}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-import_branch_lengths"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-import_branch_lengths}{}}}
\subsection{Method \code{import_branch_lengths()}}{
Import branch lengths from another species tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$import_branch_lengths(phylo)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phylo}}{Object of class "phylo" (e.g. from ape's read.tree())}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-add_species_nodes_annotation"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-add_species_nodes_annotation}{}}}
\subsection{Method \code{add_species_nodes_annotation()}}{
Add species nodes attributes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$add_species_nodes_annotation(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{data.frame to be merged with spNodes}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-add_species_edges_annotation"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-add_species_edges_annotation}{}}}
\subsection{Method \code{add_species_edges_annotation()}}{
Add species edges attributes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$add_species_edges_annotation(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{data.frame to be merged with spEdges}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-flip_species_children"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-flip_species_children}{}}}
\subsection{Method \code{flip_species_children()}}{
Swap the children of a species node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$flip_species_children(spnames)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{spnames}}{names of the species whose children should be flipped}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Flipping is idempotent: doing it twice restores the original state.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-print"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-print}{}}}
\subsection{Method \code{print()}}{
Print config, spNodes, and recGeneNodes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-summarize"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-summarize}{}}}
\subsection{Method \code{summarize()}}{
Print summary information about the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$summarize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-write"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-write}{}}}
\subsection{Method \code{write()}}{
Save the tree in PhyloXML format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$write(file, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{Path to the file that will be written}

\item{\code{...}}{Additional options passed to xml2::write_xml()}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-plot"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-plot}{}}}
\subsection{Method \code{plot()}}{
Create a test plot of the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$plot()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This method is used for testing purposes, just to check that all the
elements are OK. Feel free to copy the code and edit it to make your
own pretty plots.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Phylo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Phylo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Phylo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
